generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                 String  @id @default(uuid())
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  expires      DateTime

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  isAdmin       Boolean   @default(false)
  isSuperAdmin  Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Venue {
  id         Int      @id @default(autoincrement())
  name       String
  website    String
  status     String
  notes      String?
  cityTown   CityTown @relation(fields: [cityTownId], references: [id])
  cityTownId Int
  county     County   @relation(fields: [countyName], references: [name])
  countyName   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model CityTown {
  id          Int      @id @default(autoincrement())
  name        String
  county      County   @relation(fields: [countyName], references: [name])
  countyName  String
  venues      Venue[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique(fields: [name, countyName], name: "cityCounty")
}

model County {
  name      String     @unique
  cityTowns CityTown[]
  venues    Venue[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}
